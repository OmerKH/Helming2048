name: CI/CD for 2048 Chart

on:
  push:
    branches: [ "master" ]
    # tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]


env:
  APP_NAME: 2048
  CHART_PATH: ./gamechart



jobs:
  lint-and-docs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-24.04]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Helm lint
        run: |
          echo "🔍 Linting Helm chart..."
          helm lint ${{ env.CHART_PATH }}

      - name: Helm template and validate
        run: |
          echo "🔍 Validating Helm templates..."
          helm template test-release ${{ env.CHART_PATH }} --debug --dry-run

      - name: Check README is up-to-date
        shell: bash
        run: |
          if [ ! -f README.md ]; then
            echo "❌ README.md not found!"
            exit 1
          fi

          echo "✅ README.md validation passed"

  deploy:
    name:  Deploy to Staging
    if: github.event_name == 'pull_request'
    needs: lint-and-docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-24.04]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        

      - name: Configure Kubernetes access
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl config use-context docker-desktop
          kubectl get nodes

      - name: Helm upgrade
        env:
          KUBECONFIG: $PWD/kubeconfig
        run: |
          helm upgrade --install game ./gamechart --namespace default